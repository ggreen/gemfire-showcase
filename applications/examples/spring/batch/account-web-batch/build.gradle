plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'gemfire.showcase'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	set('springCloudVersion', "2023.0.3")
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation "com.vmware.gemfire:spring-data-3.1-gemfire-10.1:1.0.1"
	implementation "com.vmware.gemfire:gemfire-core:10.1.1"
	implementation 'org.springframework.cloud:spring-cloud-starter-task'
	implementation "com.vmware.gemfire:gemfire-cq:10.1.1"
	implementation 'com.github.nyla-solutions:nyla.solutions.core:2.2.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'com.vmware.gemfire:gemfire-testcontainers:2.0.0'
	testImplementation 'org.testcontainers:postgresql:1.20.2'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('bootJar') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
	useJUnitPlatform()
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url 'https://repo.spring.io/milestone' }
	maven {
		url "https://packages.broadcom.com/artifactory/gemfire/"
		metadataSources {
			mavenPom()
			artifact()
			ignoreGradleMetadataRedirection()
		}
		credentials {
			credentials {
				username System.getenv('BROADCOM_MAVEN_USERNAME')
				password System.getenv('BROADCOM_GEMFIRE_MAVEN_PASSWORD')
			}
		}
	}
}