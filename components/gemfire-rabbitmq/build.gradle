buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath("com.gradleup.shadow:shadow-gradle-plugin:9.2.2")
    }
}

//plugins {
//    id 'java-library'
//    id 'com.gradleup.shadow' version '9.2.2'
//}

apply plugin: 'java'
apply plugin: 'com.gradleup.shadow'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

apply plugin: 'signing'
apply plugin: 'maven-publish'




version = '2.0.1'


tasks.shadowJar {
    dependencies {
        exclude(dependency("org.apache.logging.log4j:.*"))
        exclude(dependency("com.vmware.gemfire:.*"))
        exclude(dependency("org.slf4j:.*"))
        exclude(dependency("org.apache.geode:.*"))
        exclude(dependency("com.fasterxml.jackson:.*"))
        exclude(dependency("com.fasterxml.jackson.core:.*"))
        exclude(dependency("jackson-datatype-joda:.*"))
        exclude(dependency("antlr:.*"))
        exclude(dependency("io.micrometer:.*"))

        exclude(dependency("io.github.classgraph:.*"))
        exclude(dependency("nonapi.io.github.classgraph:.*"))
        exclude(dependency("javax.*:.*"))
        exclude(dependency("org.apache.commons.beanutils:.*"))
        exclude(dependency("org.apache.commons.codec:.*"))
        exclude(dependency("org.apache.commons.collections:.*"))
        exclude(dependency("org.apache.commons.digester:.*"))
        exclude(dependency("org.apache.commons.io:.*"))
        exclude(dependency("org.apache.commons.logging:.*"))
        exclude(dependency("org.apache.commons.validator:.*"))
        exclude(dependency("org.apache.shiro:.*"))
        exclude(dependency("org.bson.assertions:.*"))
        exclude(dependency("org.bson.codecs:.*"))
        exclude(dependency("org.bson.conversions:.*"))
        exclude(dependency("org.bson.internal:.*"))
        exclude(dependency("org.bson.internal:.*"))
        exclude(dependency("org.jgroups:.*"))
        exclude(dependency("org.projectlombok:.*"))
    }
}


group = 'io.pivotal.services.dataTx'
archivesBaseName = 'gemfire-rabbitmq'

ext {
    gemFireVersion = '10.0.0'
}


signing {
    sign(publishing.publications)
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'gemfire-rabbitmq',
                'Can-Redefine-Classes': false,
                'Can-Set-Native-Method-Prefix': false
        )
    }
}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        url "https://packages.broadcom.com/artifactory/gemfire/"
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
        credentials {
            username System.getenv('BROADCOM_MAVEN_USERNAME')
            System.getenv('BROADCOM_GEMFIRE_MAVEN_PASSWORD')
        }
    }
}
dependencies {
    implementation("com.rabbitmq:amqp-client:5.16.0")
    compileOnly group: 'com.vmware.gemfire', name: 'gemfire-core', version: gemFireVersion
    compileOnly 'org.apache.logging.log4j:log4j-core:2.18.0'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation group: 'com.github.nyla-solutions', name: 'nyla.solutions.core', version: '2.3.3'

    testImplementation group: 'com.vmware.gemfire', name: 'gemfire-core', version: gemFireVersion
    testImplementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.18.0'

    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.6.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0")

}


publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = 'gemfire-rabbitmq'
                groupId = group
                artifactId = 'gemfire-rabbitmq'
                description = 'gemfire-rabbitmq'
                packaging = 'jar'
                url = 'https://github.com/ggreen/gemfire-extensions'
                licenses {
                    license {
                        url = 'https://github.com/ggreen/gemfire-extensions/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ggreen'
                        name = 'Gregory Green'
                        email = 'gregoryg@vmware.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ggreen/gemfire-extensions.git'
                    developerConnection = 'scm:git:https://github.com/ggreen/gemfire-extensions.git'
                    url = 'https://github.com/ggreen/gemfire-extensions.git'
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            name = "CentralMaven" //  optional target repository name
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username System.getenv('BROADCOM_MAVEN_USERNAME')
                password System.getenv('BROADCOM_GEMFIRE_MAVEN_PASSWORD')
            }
        }
    }
}

test {
    useJUnitPlatform()
}