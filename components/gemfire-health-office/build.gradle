plugins {
    id 'java-library'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

apply plugin: 'signing'
apply plugin: 'maven-publish'

version = '1.0.1-'

group = 'com.vmware.pivotal.labs.services.dataTx'
archivesBaseName = 'gemfire-health-office'

ext {
    gemFireVersion = '10.0.0'
}

signing {
    sign(publishing.publications)
}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        url "https://packages.broadcom.com/artifactory/gemfire/"
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
        credentials {
            username System.getenv('BROADCOM_GEMFIRE_MAVEN_PASSWORD')
            password System.getenv('BROADCOM_GEMFIRE_MAVEN_PASSWORD')
        }
    }
}
dependencies {

    implementation(group: 'com.github.nyla-solutions', name: 'nyla.solutions.office', version: '0.0.3')
            {
                exclude group: 'junit', module: 'junit'
            }
    implementation 'com.github.nyla-solutions:nyla.solutions.core:1.3.0'

    version = '1.0.0'

    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

//    implementation project(':components:gemfire-extensions-core')
    implementation group: 'com.vmware.gemfire', name: 'gemfire-core', version: gemFireVersion
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.15.1'

//    implementation group: 'com.vmware.gemfire', name: 'gemfire-search', version: '1.0.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
    implementation group: 'com.github.nyla-solutions', name: 'nyla.solutions.core', version: '1.5.1'

    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.3.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.3.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.3'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    testImplementation group: 'org.postgresql', name: 'postgresql', version: '42.2.9'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.3")

}



publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = 'gemfire-health-office'
                groupId = group
                artifactId = 'gemfire-health-office'
                description = 'This Java API provides support for GemFire'
                packaging = 'jar'
                url = 'https://github.com/ggreen/gemfire-extensions'
                licenses {
                    license {
                        url = 'https://github.com/ggreen/gemfire-extensions/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ggreen'
                        name = 'Gregory Green'
                        email = 'gregoryg@vmware.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ggreen/gemfire-extensions.git'
                    developerConnection = 'scm:git:https://github.com/ggreen/gemfire-extensions.git'
                    url = 'https://github.com/ggreen/gemfire-extensions.git'
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            name = "CentralMaven" //  optional target repository name
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username System.getenv('BROADCOM_MAVEN_USERNAME')
                password System.getenv('BROADCOM_GEMFIRE_MAVEN_PASSWORD')
            }
        }
    }
}
